{"ast":null,"code":"var _jsxFileName = \"D:\\\\2023SepDublinBatch\\\\PSAIWebTechnology\\\\MERNProjectWeb\\\\frontend\\\\src\\\\Pages\\\\Register\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { Header } from '../../Components/Header/Header.js';\nimport './Register.css';\nimport react, { useState } from 'react';\nimport { Footer } from '../../Components/Footer/Footer.js';\nimport { url } from '../../Utils/Links.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  let navigate = useNavigate();\n  const registerEndPoint = \"register\";\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [cPassword, setCPassword] = useState('');\n  const [error, setError] = useState('');\n  const saveRegisterData = async () => {\n    if (!name || name === '') {\n      setError(\"Name can't be blank\");\n      return;\n    }\n    if (!email || email === '') {\n      setError(\"Email can't be blank\");\n      return;\n    }\n    if (!password || password === '') {\n      setError(\"Password can't be blank\");\n      return;\n    }\n    try {\n      const res = await fetch(`${url}/${registerEndPoint}`, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          \"name\": name,\n          \"email\": email,\n          \"password\": password\n        })\n      });\n      if (res.ok) {\n        const data = await res.json();\n        if (data.err) {\n          setError(data.err);\n        } else {\n          fetch(`${url}/getcookies`, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"appplication/json\"\n            }\n          }).then(res => {\n            if (res.ok) {\n              res.json();\n            } else {\n              console.log(\"res not working\");\n            }\n          }).then(data => {\n            if (data.usercookie) {\n              console.log(\"cookies\", data);\n            }\n            if (data.err) {\n              console.log(\"No cookie found\", data.err);\n            }\n          }).catch(e => {\n            console.log(\"Url not repsonding to fetch cookies\", e);\n          });\n          alert(data.msg);\n          navigate('/');\n        }\n      } else {\n        console.log(\"No response from endPoint!\");\n      }\n    } catch (err) {\n      console.log(\"Error connecting url!\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RegisterContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RegisterForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register Yourself!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: e => {\n          setName(e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: e => {\n          setEmail(e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => {\n          setPassword(e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"ConfirmPassword\",\n        onChange: e => {\n          setCPassword(e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        style: {\n          color: \"red\",\n          fontSize: \"12px\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => saveRegisterData(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"kI8RZ1Z2GYE8Q/HIQclZLt8Sg74=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Header","react","useState","Footer","url","useNavigate","jsxDEV","_jsxDEV","Register","_s","navigate","registerEndPoint","name","setName","email","setEmail","password","setPassword","cPassword","setCPassword","error","setError","saveRegisterData","res","fetch","method","headers","credentials","body","JSON","stringify","ok","data","json","err","then","console","log","usercookie","catch","e","alert","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","required","style","color","fontSize","onClick","_c","$RefreshReg$"],"sources":["D:/2023SepDublinBatch/PSAIWebTechnology/MERNProjectWeb/frontend/src/Pages/Register/Register.js"],"sourcesContent":["import { Header } from '../../Components/Header/Header.js';\r\nimport './Register.css';\r\nimport react, { useState } from 'react';\r\nimport {Footer} from '../../Components/Footer/Footer.js';\r\nimport { url } from '../../Utils/Links.js';\r\nimport  {useNavigate}  from 'react-router-dom';\r\n\r\nfunction Register()\r\n{\r\n    let navigate = useNavigate();\r\n    \r\n    const registerEndPoint=\"register\";\r\n\r\n    const [name,setName]=useState('');\r\n    const [email,setEmail]=useState('');\r\n    const [password,setPassword]=useState('');\r\n    const [cPassword,setCPassword]=useState('');\r\n\r\n    const [error,setError]=useState('');\r\n\r\n    const saveRegisterData=async ()=>{\r\n        if(!name || name==='')\r\n        {\r\n            setError(\"Name can't be blank\");\r\n            return;\r\n        }\r\n        if(!email || email==='')\r\n        {\r\n            setError(\"Email can't be blank\");\r\n            return;\r\n        }\r\n        if(!password || password==='')\r\n        {\r\n            setError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        try\r\n        {\r\n            const res=await fetch(`${url}/${registerEndPoint}`,{method:'POST',headers:{\"Content-Type\":\"application/json\"},\r\n            credentials:'include',body:JSON.stringify({\"name\":name,\"email\":email,\"password\":password})});\r\n            \r\n            if(res.ok)\r\n            {\r\n              const data=await res.json();\r\n              if(data.err)\r\n              {\r\n                   setError(data.err);\r\n              }\r\n              else\r\n              {\r\n                  fetch(`${url}/getcookies`,{method:\"GET\",headers:{\"Content-Type\":\"appplication/json\"}})\r\n                  .then(res=>{\r\n                    if(res.ok)\r\n                    {\r\n                       res.json();\r\n                    }\r\n                    else\r\n                    {\r\n                       console.log(\"res not working\");\r\n                    }\r\n                  }).then(data=>{\r\n                    if(data.usercookie)\r\n                    {\r\n                        console.log(\"cookies\",data);\r\n                    }\r\n                    if(data.err)\r\n                    {\r\n                        console.log(\"No cookie found\",data.err);\r\n                    }\r\n                   })\r\n                  .catch(e=>{\r\n                    console.log(\"Url not repsonding to fetch cookies\",e)\r\n                  })\r\n                   alert(data.msg);\r\n                   navigate('/');\r\n              }\r\n            }\r\n            else\r\n            {\r\n                console.log(\"No response from endPoint!\");\r\n            }\r\n        }\r\n        catch(err)\r\n        {\r\n              console.log(\"Error connecting url!\",err);\r\n        }\r\n    }\r\n    return (\r\n    <div className='RegisterContainer'>\r\n      <Header/>\r\n      <div className='RegisterForm'>\r\n         <h2>Register Yourself!</h2>\r\n         <input type=\"text\" placeholder='Name' onChange={(e)=>{setName(e.target.value)}} required/>\r\n         <input type=\"email\" placeholder='Email' onChange={(e)=>{setEmail(e.target.value)}} required/>\r\n         <input type=\"password\" placeholder='Password' onChange={(e)=>{setPassword(e.target.value)}} required/>\r\n         <input type=\"password\" placeholder='ConfirmPassword' onChange={(e)=>{setCPassword(e.target.value)}} required/>\r\n         <text style={{color:\"red\",fontSize:\"12px\"}}>{error}</text>\r\n         <button onClick={()=>saveRegisterData()}>Submit</button>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}